"""
Contoh penggunaan XSS dan SQL Injection Penetration Testing yang Dioptimalkan
"""

import sys
import os

# Add app directory to path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..'))

from app.services.xss_pentest import XSSPentester
from app.services.sql_pentest import SQLPentester
from playwright.sync_api import sync_playwright


def test_optimized_xss_pentest():
    """Test XSS penetration testing yang dioptimalkan"""
    print("🔒 Testing Optimized XSS Penetration Testing...")
    
    with sync_playwright() as p:
        browser = p.chromium.launch(headless=True)
        page = browser.new_page()
        
        # Test dengan halaman yang memiliki form
        test_url = "https://httpbin.org/forms/post"
        
        try:
            xss_tester = XSSPentester()
            result = xss_tester.run_xss_test(page, test_url)
            
            print(f"✅ Optimized XSS Test Complete")
            print(f"   URL: {result['url']}")
            print(f"   Total Tests: {result['summary']['total_tests']}")
            print(f"   Vulnerabilities Found: {result['summary']['vulnerabilities_found']}")
            print(f"   High Vulnerabilities: {result['summary']['high_vulnerabilities']}")
            print(f"   Critical Vulnerabilities: {result['summary']['critical_vulnerabilities']}")
            
            if result['summary']['vulnerabilities_found'] > 0:
                print("🚨 Vulnerabilities detected!")
                for test in result['form_tests']:
                    if test['is_vulnerable']:
                        print(f"   - Input: {test['input_name']}")
                        print(f"   - Payload: {test['payload']}")
                        print(f"   - Risk: {test['risk_level']}")
                        print(f"   - Snippet: {test['response_snippet'][:100]}...")
            else:
                print("✅ No XSS vulnerabilities found")
                
        except Exception as e:
            print(f"❌ Error: {e}")
        finally:
            browser.close()


def test_optimized_sql_pentest():
    """Test SQL injection penetration testing yang dioptimalkan"""
    print("🔒 Testing Optimized SQL Injection Penetration Testing...")
    
    with sync_playwright() as p:
        browser = p.chromium.launch(headless=True)
        page = browser.new_page()
        
        # Test dengan halaman yang memiliki form
        test_url = "https://httpbin.org/forms/post"
        
        try:
            sql_tester = SQLPentester()
            result = sql_tester.run_sql_test(page, test_url)
            
            print(f"✅ Optimized SQL Test Complete")
            print(f"   URL: {result['url']}")
            print(f"   Total Tests: {result['summary']['total_tests']}")
            print(f"   Vulnerabilities Found: {result['summary']['vulnerabilities_found']}")
            print(f"   High Vulnerabilities: {result['summary']['high_vulnerabilities']}")
            print(f"   Critical Vulnerabilities: {result['summary']['critical_vulnerabilities']}")
            
            if result['summary']['vulnerabilities_found'] > 0:
                print("🚨 Vulnerabilities detected!")
                for test in result['form_tests']:
                    if test['is_vulnerable']:
                        print(f"   - Input: {test['input_name']}")
                        print(f"   - Payload: {test['payload']}")
                        print(f"   - Risk: {test['risk_level']}")
                        print(f"   - Snippet: {test['response_snippet'][:100]}...")
            else:
                print("✅ No SQL injection vulnerabilities found")
                
        except Exception as e:
            print(f"❌ Error: {e}")
        finally:
            browser.close()


def test_url_parameter_pentest():
    """Test URL parameter penetration testing"""
    print("🔒 Testing URL Parameter Penetration Testing...")
    
    with sync_playwright() as p:
        browser = p.chromium.launch(headless=True)
        page = browser.new_page()
        
        # Test dengan URL yang memiliki parameters
        test_url = "https://httpbin.org/get?search=test&category=electronics"
        
        try:
            xss_tester = XSSPentester()
            result = xss_tester.run_xss_test(page, test_url)
            
            print(f"✅ URL Parameter XSS Test Complete")
            print(f"   URL: {result['url']}")
            print(f"   Form Tests: {len(result['form_tests'])}")
            print(f"   URL Parameter Tests: {len(result['url_parameter_tests'])}")
            print(f"   Total Tests: {result['summary']['total_tests']}")
            print(f"   Vulnerabilities Found: {result['summary']['vulnerabilities_found']}")
            
            if result['summary']['vulnerabilities_found'] > 0:
                print("🚨 URL Parameter Vulnerabilities detected!")
                for test in result['url_parameter_tests']:
                    if test['is_vulnerable']:
                        print(f"   - Parameter: {test['parameter_name']}")
                        print(f"   - Payload: {test['payload']}")
                        print(f"   - Risk: {test['risk_level']}")
                        print(f"   - Test URL: {test['test_url']}")
            else:
                print("✅ No URL parameter vulnerabilities found")
                
        except Exception as e:
            print(f"❌ Error: {e}")
        finally:
            browser.close()


def test_comprehensive_pentest():
    """Test comprehensive penetration testing"""
    print("🔒 Testing Comprehensive Penetration Testing...")
    
    with sync_playwright() as p:
        browser = p.chromium.launch(headless=True)
        page = browser.new_page()
        
        # Test dengan berbagai URL
        test_urls = [
            "https://httpbin.org/forms/post",
            "https://httpbin.org/get?search=test&category=electronics",
            "https://httpbin.org/post"
        ]
        
        for test_url in test_urls:
            print(f"\n🔍 Testing URL: {test_url}")
            
            try:
                # XSS Testing
                xss_tester = XSSPentester()
                xss_result = xss_tester.run_xss_test(page, test_url)
                
                print(f"   XSS Tests: {xss_result['summary']['total_tests']}")
                print(f"   XSS Vulnerabilities: {xss_result['summary']['vulnerabilities_found']}")
                
                # SQL Injection Testing
                sql_tester = SQLPentester()
                sql_result = sql_tester.run_sql_test(page, test_url)
                
                print(f"   SQL Tests: {sql_result['summary']['total_tests']}")
                print(f"   SQL Vulnerabilities: {sql_result['summary']['vulnerabilities_found']}")
                
            except Exception as e:
                print(f"   ❌ Error testing {test_url}: {e}")
        
        browser.close()


def main():
    """Main function untuk menjalankan semua test"""
    print("🚀 Starting Optimized Penetration Testing...")
    print("=" * 60)
    
    # Test XSS
    test_optimized_xss_pentest()
    print("\n" + "=" * 60)
    
    # Test SQL Injection
    test_optimized_sql_pentest()
    print("\n" + "=" * 60)
    
    # Test URL Parameters
    test_url_parameter_pentest()
    print("\n" + "=" * 60)
    
    # Test Comprehensive
    test_comprehensive_pentest()
    print("\n" + "=" * 60)
    
    print("✅ All penetration testing completed!")


if __name__ == "__main__":
    main()
