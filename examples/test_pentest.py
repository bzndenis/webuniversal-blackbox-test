"""
Contoh penggunaan XSS dan SQL Injection Penetration Testing
"""

import sys
import os

# Add app directory to path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..'))

from app.services.xss_pentest import XSSPentester
from app.services.sql_pentest import SQLPentester
from playwright.sync_api import sync_playwright


def test_xss_pentest():
    """Test XSS penetration testing"""
    print("🔒 Testing XSS Penetration Testing...")
    
    with sync_playwright() as p:
        browser = p.chromium.launch(headless=True)
        page = browser.new_page()
        
        # Test dengan halaman yang memiliki form
        test_url = "https://httpbin.org/forms/post"
        
        try:
            xss_tester = XSSPentester()
            result = xss_tester.run_xss_test(page, test_url)
            
            print(f"✅ XSS Test Complete")
            print(f"   URL: {result['url']}")
            print(f"   Total Tests: {result['summary']['total_tests']}")
            print(f"   Vulnerabilities Found: {result['summary']['vulnerabilities_found']}")
            
            if result['summary']['vulnerabilities_found'] > 0:
                print("🚨 Vulnerabilities detected!")
                for test in result['form_tests']:
                    if test['is_vulnerable']:
                        print(f"   - Input: {test['input_name']}")
                        print(f"   - Payload: {test['payload']}")
                        print(f"   - Risk: {test['risk_level']}")
            else:
                print("✅ No XSS vulnerabilities found")
                
        except Exception as e:
            print(f"❌ Error: {e}")
        finally:
            browser.close()


def test_sql_pentest():
    """Test SQL injection penetration testing"""
    print("🔒 Testing SQL Injection Penetration Testing...")
    
    with sync_playwright() as p:
        browser = p.chromium.launch(headless=True)
        page = browser.new_page()
        
        # Test dengan halaman yang memiliki form
        test_url = "https://httpbin.org/forms/post"
        
        try:
            sql_tester = SQLPentester()
            result = sql_tester.run_sql_test(page, test_url)
            
            print(f"✅ SQL Test Complete")
            print(f"   URL: {result['url']}")
            print(f"   Total Tests: {result['summary']['total_tests']}")
            print(f"   Vulnerabilities Found: {result['summary']['vulnerabilities_found']}")
            
            if result['summary']['vulnerabilities_found'] > 0:
                print("🚨 Vulnerabilities detected!")
                for test in result['form_tests']:
                    if test['is_vulnerable']:
                        print(f"   - Input: {test['input_name']}")
                        print(f"   - Payload: {test['payload']}")
                        print(f"   - Risk: {test['risk_level']}")
            else:
                print("✅ No SQL injection vulnerabilities found")
                
        except Exception as e:
            print(f"❌ Error: {e}")
        finally:
            browser.close()


def main():
    """Main function untuk menjalankan semua test"""
    print("🚀 Starting Penetration Testing Examples...")
    print("=" * 50)
    
    test_xss_pentest()
    print()
    test_sql_pentest()
    
    print("=" * 50)
    print("✅ All penetration tests completed!")


if __name__ == "__main__":
    main()
